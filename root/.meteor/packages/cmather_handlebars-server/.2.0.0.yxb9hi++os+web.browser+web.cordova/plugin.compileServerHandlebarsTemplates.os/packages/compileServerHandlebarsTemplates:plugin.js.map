{"version":3,"file":"/packages/compileServerHandlebarsTemplates:plugin.js","sources":["compileServerHandlebarsTemplates/plugin/compile-handlebars.js"],"names":[],"mappings":";;;;;;;;;;AAAA,+B;;AAEA,mE;AACA,oD;AACA,S;;AAEA,sD;AACA,wB;AACA,mB;;AAEA,iD;AACA,qC;;AAEA,gD;AACA,2D;AACA,wF;AACA,E;AACA,Q;AACA,qC;AACA,0D;AACA,mF;AACA,gG;AACA,mC;AACA,qC;AACA,6C;AACA,4B;AACA,8C;AACA,W;AACA,Q;AACA,a;AACA,E;AACA,6B;AACA,iE;AACA,sC;AACA,Y;AACA,K;AACA,G","sourcesContent":["var path = Npm.require('path');\n\nPlugin.registerSourceHandler(\"handlebars\", function (compileStep) {\n  var contents = compileStep.read().toString('utf8')\n    , js;\n\n  var path_part = path.dirname(compileStep.inputPath);\n  if (path_part === '.')\n    path_part = '';\n\n  if (path_part.length && path_part !== path.sep)\n    path_part = path_part + path.sep;\n\n  var ext = path.extname(compileStep.inputPath);\n  var basename = path.basename(compileStep.inputPath, ext);\n  var templateName = path.basename(compileStep.inputPath).match(/(.*)\\.handlebars$/)[1];\n  \n  js = [\n    \"Handlebars = Handlebars || {};\",\n    \"Handlebars.templates = Handlebars.templates || {} ;\",\n    \"var template = OriginalHandlebars.compile(\" + JSON.stringify(contents) + \");\",\n    \"Handlebars.templates[\" + JSON.stringify(templateName) + \"] = function (data, partials) { \",\n    \"partials = (partials || {});\",\n    \"return template(data || {}, { \",\n      \"helpers: OriginalHandlebars.helpers,\",\n      \"partials: partials,\",\n      \"name: \" + JSON.stringify(templateName),\n     \"});\",\n    \"};\"\n  ].join('');\n  \n  compileStep.addJavaScript({\n    path: path.join(path_part, 'handlebars.' + basename + '.js'),\n    sourcePath: compileStep.inputPath,\n    data: js\n  });\n});\n"]}